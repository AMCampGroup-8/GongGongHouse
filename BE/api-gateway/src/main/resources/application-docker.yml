server:
  port: 8000

spring:
  application:
    name: api-gateway
  config:
    activate:
      on-profile: docker
  cloud:
    gateway:
      routes:
        - id: auth-service-route
          uri: lb://AUTH-SERVICE
          predicates:
            - Path=/auth-service/**
          filters:
            - RewritePath=/auth-service/(?<segment>.*), /$\{segment}
            - AddResponseHeader=X-Response-Service, auth-service
        - id: user-service-route
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/**
          filters:
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
            - AddResponseHeader=X-Response-Service, user-service
      globalcors:
        corsConfigurations:
          '[/**]':
            allowedOrigins: "*"
            allowedMethods:
              - GET
              - POST
              - PUT
              - DELETE
              - OPTIONS
            allowedHeaders: "*"
      default-filters:
        - DedupeResponseHeader=Access-Control-Allow-Origin Access-Control-Allow-Credentials, RETAIN_FIRST

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://eureka-server:8761/eureka/
  instance:
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
    prefer-ip-address: true

jwt:
  header: Authorization
  secretKey: ZnJvbXRoZXNoYWRvd3NiZXR3ZWVudGhlc3RhcnNJY29tZWF3YWtlbmluZ3RoZWRhcmtuZXNzb2ZhZ2VzYW5kYnJpbmdpbmdsaWdodA==

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
  security:
    enabled: false

logging:
  level:
    root: INFO
    org.springframework.cloud.gateway: DEBUG
    org.springframework.web: DEBUG
    reactor.netty.http.client: DEBUG 